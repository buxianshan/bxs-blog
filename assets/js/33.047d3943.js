(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{442:function(s,t,a){"use strict";a.r(t);var n=a(36),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"没有真正意义的私有变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有真正意义的私有变量"}},[s._v("#")]),s._v(" 没有真正意义的私有变量")]),s._v(" "),a("p",[s._v("经常听说在 Python 类中以一个下划线开头的变量是保护类型（protected ）的变量，以双下划线开头的变量是私有类型（private）的变量。")]),s._v(" "),a("p",[s._v("但其实这种写法只是Python的一个约定，无论怎么写，最终都不能实现真正意义的私有变量，也就是实际上还是可以被直接访问。")]),s._v(" "),a("p",[s._v("Python只是会把例如 "),a("code",[s._v("__spam")]),s._v(" 这种标识符替换为 "),a("code",[s._v("_classname__spam")]),s._v(" ，所以只要使用 "),a("code",[s._v("objecname._classname__spam")]),s._v(" 还是可以直接访问私有变量的。")]),s._v(" "),a("p",[s._v("demo：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    peter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Peter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(peter.__name), 直接访问__name会报错：AttributeError: 'Person' object has no attribute '__name'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("peter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_Person__name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("peter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("用PyCharm调试也能看到，实际上只是双下划线开头的变量名被替换成了 "),a("code",[s._v("_classname__spam")]),s._v(" 这种格式：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://buxianshan.oss-cn-beijing.aliyuncs.com/Typora_images/image-20220505114706436.png",alt:"image-20220505114706436"}})]),s._v(" "),a("p",[s._v("参考："),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3.9/tutorial/classes.html?highlight=private#private-variables",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python官方文档"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);